{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Jeet%20soni/OneDrive/Documents/Desktop/UPI%20APP/src/components/header.tsx"],"sourcesContent":["'use client'\r\n\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { Logo } from \"@/components/icons\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Shield, List, LogIn, LogOut } from \"lucide-react\";\r\nimport { useAuth } from \"@/hooks/use-auth.tsx\";\r\n\r\nexport function Header() {\r\n  const pathname = usePathname();\r\n  const { isAuthenticated, logout, isInitialized } = useAuth();\r\n\r\n  return (\r\n    <header className=\"sticky top-0 z-50 w-full\">\r\n      <div className=\"container flex h-20 max-w-screen-2xl items-center justify-between\">\r\n        <Link href=\"/\" className=\"mr-6 flex items-center space-x-2\">\r\n          <Logo className=\"h-8 w-8 text-primary\" />\r\n          <span className=\"text-2xl font-bold font-headline sm:inline-block\">\r\n            ScamGuard UPI\r\n          </span>\r\n        </Link>\r\n        <div className=\"flex items-center gap-4\">\r\n          <p className=\"hidden md:block text-sm text-muted-foreground max-w-xs\">\r\n              Analyse suspicious UPI IDs to detect malware and other breaches, automatically share them with the security community.\r\n          </p>\r\n          <nav className=\"flex items-center\">\r\n            {isInitialized && (\r\n              <>\r\n              {isAuthenticated ? (\r\n                  <>\r\n                    {pathname === '/whitelist' ? (\r\n                       <Link href=\"/\">\r\n                          <Button variant=\"ghost\">\r\n                            <Shield className=\"mr-2\" />\r\n                            Scanner\r\n                          </Button>\r\n                        </Link>\r\n                    ) : (\r\n                       <Link href=\"/whitelist\">\r\n                          <Button variant=\"ghost\">\r\n                            <List className=\"mr-2\" />\r\n                            Whitelist\r\n                          </Button>\r\n                        </Link>\r\n                    )}\r\n                    <Button variant=\"ghost\" onClick={logout}>\r\n                      <LogOut className=\"mr-2\" />\r\n                      Logout\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Link href=\"/login\">\r\n                    <Button variant=\"ghost\">\r\n                       <LogIn className=\"mr-2\" />\r\n                       Admin Login\r\n                    </Button>\r\n                  </Link>\r\n                )}\r\n              </>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AACA;AAPA;;;;;;;;AASO,SAAS;IACd,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,eAAe,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,UAAO,AAAD;IAEzD,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;;sCACvB,8OAAC;4BAAK,WAAU;;;;;;sCAChB,8OAAC;4BAAK,WAAU;sCAAmD;;;;;;;;;;;;8BAIrE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCAAyD;;;;;;sCAGtE,8OAAC;4BAAI,WAAU;sCACZ,+BACC;0CACC,gCACG;;wCACG,aAAa,6BACX,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;sDACR,cAAA,8OAAC;gDAAO,SAAQ;;kEACd,8OAAC,sMAAA,CAAA,SAAM;wDAAC,WAAU;;;;;;oDAAS;;;;;;;;;;;iEAKhC,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;sDACR,cAAA,8OAAC;gDAAO,SAAQ;;kEACd,8OAAC,kMAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;oDAAS;;;;;;;;;;;;sDAKjC,8OAAC;4CAAO,SAAQ;4CAAQ,SAAS;;8DAC/B,8OAAC,0MAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;gDAAS;;;;;;;;iEAK/B,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;8CACT,cAAA,8OAAC;wCAAO,SAAQ;;0DACb,8OAAC,wMAAA,CAAA,QAAK;gDAAC,WAAU;;;;;;4CAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYjD","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Jeet%20soni/OneDrive/Documents/Desktop/UPI%20APP/src/app/actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport { scanContentForFraud, ScanContentForFraudOutput } from '../ai/flows/scan-content-for-fraud';\r\nimport { z } from 'zod';\r\n\r\nconst KNOWN_SCAMMERS = [\r\n  'scammer@upi',\r\n  'fraud@scambank',\r\n  'badactor@fakeupi'\r\n];\r\n\r\n// This would typically be a database check\r\nlet WHITELIST_STORAGE = new Set(['admin-trusted@upi']);\r\n\r\nexport async function getWhitelist() {\r\n  return Array.from(WHITELIST_STORAGE);\r\n}\r\n\r\nexport async function addToWhitelist(upiId: string) {\r\n  WHITELIST_STORAGE.add(upiId);\r\n  return true;\r\n}\r\n\r\nexport async function removeFromWhitelist(id: string) {\r\n  WHITELIST_STORAGE.delete(id);\r\n  return true;\r\n}\r\n\r\n\r\nexport type CheckResult = {\r\n  status: 'idle' | 'safe' | 'scam' | 'trusted' | 'error';\r\n  upiId: string;\r\n  reason: string;\r\n  probability?: number;\r\n};\r\n\r\nconst UpiSchema = z.object({\r\n  upiId: z.string().min(3, { message: 'UPI ID must be at least 3 characters.' }).includes('@', { message: 'Invalid UPI ID format.' }),\r\n});\r\n\r\nexport async function checkUpi(prevState: CheckResult, formData: FormData): Promise<CheckResult> {\r\n  const upiId = formData.get('upiId') as string;\r\n  \r\n  if (!upiId) {\r\n    return { status: 'idle', upiId: '', reason: '' };\r\n  }\r\n  \r\n  const validatedFields = UpiSchema.safeParse({\r\n    upiId,\r\n  });\r\n\r\n  if (!validatedFields.success) {\r\n      return {\r\n          status: 'error',\r\n          upiId: upiId,\r\n          reason: validatedFields.error.errors[0].message,\r\n      };\r\n  }\r\n  \r\n  const currentWhitelist = await getWhitelist();\r\n  if (currentWhitelist.includes(upiId)) {\r\n    return { status: 'trusted', upiId, reason: 'This ID is in the admin trusted whitelist.' };\r\n  }\r\n\r\n  if (KNOWN_SCAMMERS.includes(upiId.toLowerCase())) {\r\n    return { status: 'scam', upiId, reason: 'This ID is on a known scammer blacklist.', probability: 1.0 };\r\n  }\r\n\r\n  try {\r\n    const result: ScanContentForFraudOutput = await scanContentForFraud({ scannedText: upiId });\r\n\r\n    if (result.isFraudulent) {\r\n      return {\r\n        status: 'scam',\r\n        upiId,\r\n        reason: result.reason,\r\n        probability: result.fraudProbability\r\n      };\r\n    } else {\r\n      return {\r\n        status: 'safe',\r\n        upiId,\r\n        reason: 'No immediate signs of fraud were detected.'\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error('AI check failed:', error);\r\n    return { status: 'error', upiId, reason: 'Could not perform the analysis. Please try again later.' };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAwCsB,WAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Jeet%20soni/OneDrive/Documents/Desktop/UPI%20APP/src/components/main-page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useActionState, useEffect, useRef, useState, useCallback } from 'react';\r\nimport { checkUpi, type CheckResult } from '@/app/actions';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';\r\nimport { Search, ShieldCheck, ShieldX, UserCheck, Info, BadgeHelp, Loader2, QrCode, FileUp, ArrowLeft, Camera } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport Link from 'next/link';\r\nimport jsQR from 'jsqr';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\n\r\n\r\nconst initialState: CheckResult = {\r\n  status: 'idle',\r\n  upiId: '',\r\n  reason: '',\r\n};\r\n\r\nfunction SubmitButton() {\r\n  const { pending } = useActionState();\r\n  return (\r\n    <Button type=\"submit\" className=\"w-full sm:w-auto\" disabled={pending}>\r\n      {pending ? <Loader2 className=\"mr-2 animate-spin\" /> : <Search className=\"w-5 h-5\" />}\r\n      <span className=\"sm:hidden\">Check UPI ID</span>\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction ResultDisplay({ state, onReset }: { state: CheckResult, onReset: () => void }) {\r\n  if (state.status === 'idle') {\r\n    return null\r\n  }\r\n  \r\n  if (state.status === 'error') {\r\n     return (\r\n       <div className=\"text-center text-destructive p-8 flex flex-col items-center gap-4\">\r\n        <Info className=\"w-16 h-16\" />\r\n        <p className=\"font-semibold\">An error occurred.</p>\r\n        <p>{state.reason}</p>\r\n         <Button onClick={onReset} variant=\"outline\">\r\n            <ArrowLeft className=\"mr-2\" />\r\n            Try Again\r\n        </Button>\r\n      </div>\r\n     )\r\n  }\r\n\r\n  const baseCardClass = \"transition-all duration-500 mt-8 border-2 rounded-xl bg-card/50\";\r\n  const resultData = {\r\n    trusted: {\r\n      icon: <UserCheck className=\"w-16 h-16 text-primary\" />,\r\n      title: \"Trusted ID\",\r\n      description: state.reason,\r\n      cardClass: \"border-primary/50 shadow-primary/20 shadow-lg\",\r\n    },\r\n    safe: {\r\n      icon: <ShieldCheck className=\"w-16 h-16 text-green-400\" />,\r\n      title: \"Looking Safe\",\r\n      description: state.reason,\r\n      cardClass: \"border-green-400/50 shadow-green-400/20 shadow-lg\",\r\n    },\r\n    scam: {\r\n      icon: <ShieldX className=\"w-16 h-16 text-red-400\" />,\r\n      title: \"Potential Scam Detected!\",\r\n      description: state.reason,\r\n      cardClass: \"border-red-400/50 shadow-red-400/20 shadow-lg\",\r\n    },\r\n  }[state.status]\r\n\r\n  return (\r\n    <Card className={`${baseCardClass} ${resultData?.cardClass}`}>\r\n      <CardHeader className=\"text-center items-center\">\r\n        {resultData?.icon}\r\n        <CardTitle className=\"font-headline text-xl\">{resultData?.title}</CardTitle>\r\n        <CardDescription className=\"font-mono\">{state.upiId}</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"text-center\">\r\n        <p>{resultData?.description}</p>\r\n        {state.status === 'scam' && state.probability && (\r\n          <div className=\"mt-4\">\r\n            <p className=\"text-sm font-medium mb-2\">Fraud Probability:</p>\r\n            <Progress value={state.probability * 100} className=\"w-full\" />\r\n            <p className=\"text-xs text-muted-foreground mt-1\">{(state.probability * 100).toFixed(0)}%</p>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n      <CardFooter className=\"flex-col sm:flex-row justify-center gap-4\">\r\n          <Button onClick={onReset} variant=\"outline\">\r\n            <Search className=\"mr-2\"/>\r\n            Check Another\r\n          </Button>\r\n          {state.status === 'scam' && (\r\n            <Link href=\"https://cybercrime.gov.in/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <Button variant=\"destructive\">\r\n                Report Scam\r\n              </Button>\r\n            </Link>\r\n          )}\r\n        </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nfunction QRScanner({ onScanSuccess, onCancel }: { onScanSuccess: (data: string) => void, onCancel: () => void }) {\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n    const [hasCameraPermission, setHasCameraPermission] = useState<boolean | null>(null);\r\n    const [isScanningActive, setIsScanningActive] = useState(true);\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n    const { toast } = useToast();\r\n\r\n    const cleanUpCamera = useCallback(() => {\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n            const stream = videoRef.current.srcObject as MediaStream;\r\n            stream.getTracks().forEach(track => track.stop());\r\n            videoRef.current.srcObject = null;\r\n        }\r\n        setIsCameraOn(false);\r\n    }, []);\r\n\r\n    const handleScanResult = useCallback((result: string) => {\r\n        if(!isScanningActive) return;\r\n        setIsScanningActive(false);\r\n        cleanUpCamera();\r\n        \r\n        let upiId = result;\r\n        if (result.startsWith('upi://')) {\r\n          try {\r\n            const params = new URLSearchParams(result.split('?')[1]);\r\n            const pa = params.get('pa');\r\n            if(pa) {\r\n              upiId = pa;\r\n            }\r\n          } catch (e) {\r\n            console.error(\"Could not parse UPI URL\", e);\r\n          }\r\n        }\r\n        onScanSuccess(upiId);\r\n    }, [onScanSuccess, cleanUpCamera, isScanningActive]);\r\n\r\n\r\n    const scanQrCode = useCallback(() => {\r\n        if (!isScanningActive || !isCameraOn) return;\r\n        if (videoRef.current && videoRef.current.readyState === videoRef.current.HAVE_ENOUGH_DATA) {\r\n            const canvas = document.createElement('canvas');\r\n            const video = videoRef.current;\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            const ctx = canvas.getContext('2d');\r\n            if (!ctx) return;\r\n\r\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n            const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n\r\n            if (code) {\r\n                handleScanResult(code.data);\r\n            }\r\n        }\r\n    }, [handleScanResult, isScanningActive, isCameraOn]);\r\n\r\n    const startCamera = useCallback(async () => {\r\n        setIsScanningActive(true);\r\n        setIsCameraOn(true);\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } });\r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n                setHasCameraPermission(true);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Camera access denied:\", err);\r\n            setHasCameraPermission(false);\r\n            setIsCameraOn(false);\r\n            toast({\r\n                variant: 'destructive',\r\n                title: 'Camera Access Denied',\r\n                description: 'Please enable camera permissions in your browser settings to use this app.',\r\n            });\r\n        }\r\n    }, [toast]);\r\n\r\n    useEffect(() => {\r\n        // Cleanup camera on component unmount\r\n        return () => {\r\n            cleanUpCamera();\r\n        };\r\n    }, [cleanUpCamera]);\r\n\r\n    useEffect(() => {\r\n        let intervalId: NodeJS.Timeout;\r\n        if (hasCameraPermission && isScanningActive && isCameraOn) {\r\n            intervalId = setInterval(scanQrCode, 500);\r\n        }\r\n        return () => {\r\n            if (intervalId) clearInterval(intervalId);\r\n        }\r\n    }, [hasCameraPermission, isScanningActive, scanQrCode, isCameraOn])\r\n\r\n     const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = event.target.files?.[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                const img = new Image();\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    const ctx = canvas.getContext('2d');\r\n                    if (!ctx) return;\r\n                    ctx.drawImage(img, 0, 0);\r\n                    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n                    const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n                    if (code) {\r\n                        handleScanResult(code.data);\r\n                    } else {\r\n                        toast({ title: \"QR Code not found\", description: \"Could not find a QR code in the selected image.\", variant: \"destructive\"})\r\n                    }\r\n                };\r\n                img.src = e.target?.result as string;\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n    \r\n    const handleCancel = () => {\r\n        setIsScanningActive(false);\r\n        cleanUpCamera();\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center p-4 md:p-8 space-y-4\">\r\n             <div className=\"w-64 h-64 rounded-lg bg-muted flex items-center justify-center relative overflow-hidden ring-2 ring-primary/20\">\r\n                {isCameraOn ? (\r\n                    <>\r\n                        <video ref={videoRef} className=\"w-full h-full object-cover\" autoPlay playsInline muted />\r\n                        <div className=\"absolute inset-0 border-4 border-dashed border-primary/50 rounded-lg animate-pulse\"></div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"text-center text-muted-foreground p-4\">\r\n                        <QrCode className=\"w-16 h-16 mx-auto text-primary/50\" />\r\n                        <p>Click below to start scanning</p>\r\n                    </div>\r\n                )}\r\n                 {hasCameraPermission === false && (\r\n                     <Alert variant=\"destructive\">\r\n                        <AlertTitle>Camera Access Required</AlertTitle>\r\n                        <AlertDescription>\r\n                            Please allow camera access. You can still upload an image.\r\n                        </AlertDescription>\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n            <input type=\"file\" accept=\"image/*\" ref={fileInputRef} onChange={handleFileChange} className=\"hidden\" />\r\n            <div className=\"flex flex-wrap gap-2 justify-center\">\r\n                 {!isCameraOn && (\r\n                    <Button onClick={startCamera}>\r\n                        <Camera className=\"mr-2\"/>\r\n                        Scan QR Code\r\n                    </Button>\r\n                 )}\r\n                 <Button variant=\"outline\" onClick={() => fileInputRef.current?.click()}>\r\n                    <FileUp className=\"mr-2\"/>\r\n                    Upload Image\r\n                </Button>\r\n                <Button variant=\"ghost\" onClick={handleCancel}>\r\n                    <ArrowLeft className=\"mr-2\"/>\r\n                    Go Back\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function MainPage() {\r\n  const [state, formAction, isPending] = useActionState(checkUpi, initialState);\r\n  const { toast } = useToast();\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n  const upiIdInputRef = useRef<HTMLInputElement>(null);\r\n  const [activeTab, setActiveTab] = useState(\"upi\");\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (state.status !== 'idle') {\r\n        setShowResult(true);\r\n    }\r\n  },[state.status])\r\n\r\n  useEffect(() => {\r\n    if (state.status === 'error' && state.reason) { // Ensure reason exists\r\n      toast({\r\n        title: \"Error\",\r\n        description: state.reason,\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  }, [state, toast]);\r\n  \r\n  const handleScanSuccess = useCallback((upiId: string) => {\r\n      if (upiIdInputRef.current) {\r\n         upiIdInputRef.current.value = upiId;\r\n      }\r\n      setActiveTab(\"upi\");\r\n       setTimeout(() => {\r\n           // We need to trigger the form submission for the server action\r\n           if(formRef.current) {\r\n             const formData = new FormData(formRef.current);\r\n             formAction(formData);\r\n           }\r\n       }, 100);\r\n\r\n  }, [formAction]);\r\n\r\n  const resetForm = useCallback(() => {\r\n    setShowResult(false);\r\n    if (formRef.current) {\r\n        formRef.current.reset();\r\n    }\r\n    // A bit of a trick to reset the form state in useActionState\r\n    const formData = new FormData();\r\n    formAction(formData);\r\n  }, [formAction]);\r\n\r\n  return (\r\n    <div className=\"w-full max-w-2xl space-y-4\">\r\n      {!showResult ? (\r\n        <>\r\n            <Tabs value={activeTab} onValueChange={setActiveTab} defaultValue=\"upi\" className=\"w-full\">\r\n            <TabsList className=\"grid w-full grid-cols-2 max-w-sm mx-auto\">\r\n            <TabsTrigger value=\"upi\">\r\n                <Search className=\"w-4 h-4 mr-2\"/>\r\n                UPI ID\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"qr\">\r\n                <QrCode className=\"w-4 h-4 mr-2\"/>\r\n                QR SCAN\r\n            </TabsTrigger>\r\n            </TabsList>\r\n            <TabsContent value=\"upi\">\r\n                <form ref={formRef} action={formAction} className=\"space-y-4 pt-8\">\r\n                    <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                    <Input\r\n                        ref={upiIdInputRef}\r\n                        name=\"upiId\"\r\n                        placeholder=\"Enter UPI ID to check...\"\r\n                        required\r\n                        className=\"flex-grow text-base p-6 bg-transparent border-2 border-border focus:border-primary\"\r\n                        aria-label=\"UPI ID\"\r\n                    />\r\n                    <Button type=\"submit\" className=\"w-full sm:w-auto\" disabled={isPending}>\r\n                        {isPending ? <Loader2 className=\"mr-2 animate-spin\" /> : <Search className=\"w-5 h-5\" />}\r\n                        <span className=\"sm:hidden\">Check UPI ID</span>\r\n                    </Button>\r\n                    </div>\r\n                </form>\r\n            </TabsContent>\r\n            <TabsContent value=\"qr\">\r\n                <QRScanner onScanSuccess={handleScanSuccess} onCancel={() => setActiveTab('upi')} />\r\n            </TabsContent>\r\n        </Tabs>\r\n         <div className=\"animate-in fade-in-50 duration-500\">\r\n            <div className=\"text-center text-muted-foreground pt-16 flex flex-col items-center gap-4\">\r\n                <div className=\"w-24 h-24 relative\">\r\n                <div className=\"absolute inset-0 bg-primary/20 rounded-full animate-ping\"></div>\r\n                <BadgeHelp className=\"w-24 h-24 text-primary\" />\r\n                </div>\r\n                <p className=\"mt-4 font-headline text-lg\">Check a UPI ID or Scan a QR Code</p>\r\n                <p className=\"max-w-md\">Get an instant risk analysis to avoid potential scams before you make a payment.</p>\r\n            </div>\r\n        </div>\r\n        </>\r\n      ) : (\r\n         <div className=\"animate-in fade-in-50 duration-500\">\r\n            <ResultDisplay state={state} onReset={resetForm}/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}