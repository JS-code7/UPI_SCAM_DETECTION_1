{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Jeet%20soni/OneDrive/Documents/Desktop/UPI%20APP/src/hooks/use-auth.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback, createContext, useContext, ReactNode } from 'react';\r\n\r\nconst AUTH_KEY = 'upi-scamguard-auth';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  isInitialized: boolean;\r\n  login: () => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const storedAuth = localStorage.getItem(AUTH_KEY);\r\n      if (storedAuth) {\r\n        setIsAuthenticated(JSON.parse(storedAuth));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to load auth state from localStorage\", error);\r\n    }\r\n    setIsInitialized(true);\r\n  }, []);\r\n\r\n  const login = useCallback(() => {\r\n    try {\r\n        setIsAuthenticated(true);\r\n        localStorage.setItem(AUTH_KEY, JSON.stringify(true));\r\n    } catch (error) {\r\n        console.error(\"Failed to save auth state to localStorage\", error);\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    try {\r\n        setIsAuthenticated(false);\r\n        localStorage.removeItem(AUTH_KEY);\r\n    } catch (error) {\r\n        console.error(\"Failed to remove auth state from localStorage\", error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, isInitialized, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,WAAW;AASjB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;YACF,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,mBAAmB,KAAK,KAAK,CAAC;YAChC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+CAA+C;QAC/D;QACA,iBAAiB;IACnB,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACxB,IAAI;YACA,mBAAmB;YACnB,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;QAClD,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,6CAA6C;QAC/D;IACF,GAAG,EAAE;IAEL,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACzB,IAAI;YACA,mBAAmB;YACnB,aAAa,UAAU,CAAC;QAC5B,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,iDAAiD;QACnE;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAiB;YAAe;YAAO;QAAO;kBAC1E;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}